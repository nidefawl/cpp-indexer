---
Checks: >
    *,
    -cppcoreguidelines-avoid-non-const-global-variables,
    -cppcoreguidelines-non-private-member-variables-in-classes,
    -cppcoreguidelines-avoid-magic-numbers,
    -cppcoreguidelines-owning-memory,
    -cppcoreguidelines-prefer-member-initializer,
    -cppcoreguidelines-pro-type-union-access,
    -cppcoreguidelines-pro-type-reinterpret-cast,
    -cppcoreguidelines-pro-bounds-array-to-pointer-decay,
    -cppcoreguidelines-pro-bounds-constant-array-index,
    -cppcoreguidelines-pro-bounds-pointer-arithmetic,
    -cppcoreguidelines-pro-type-vararg,
    -cppcoreguidelines-special-member-functions,
    -bugprone-narrowing-conversions,
    -bugprone-easily-swappable-parameters,
    -*-avoid-c-arrays,
    -modernize-use-trailing-return-type,
    -modernize-use-nodiscard,
    -modernize-use-auto,
    -misc-non-private-member-variables-in-classes,
    -misc-unused-parameters,
    -misc-no-recursion,
    -readability-*,
    -google-readability-*,
    -hicpp-*,
    -llvm-*,
    -llvmlibc-*,
    -abseil-*,
    -altera-*,
    -android-*,
    -boost-*,
    -fuchsia-*,
    -cert-err33-c,

# DisabledChecks: >
#     clang-analyzer-optin.cplusplus.*,
#     cert-*,
#     bugprone-argument-comment,
#     bugprone-bad-signal-to-kill-thread,
#     bugprone-bool-pointer-implicit-conversion,
#     bugprone-branch-clone,
#     bugprone-copy-constructor-init,
#     bugprone-dangling-handle,
#     bugprone-dynamic-static-initializers,
#     bugprone-exception-escape,
#     bugprone-fold-init-type,
#     bugprone-forward-declaration-namespace,
#     bugprone-forwarding-reference-overload,
#     bugprone-implicit-widening-of-multiplication-result,
#     bugprone-inaccurate-erase,
#     bugprone-incorrect-roundings,
#     bugprone-infinite-loop,
#     bugprone-integer-division,
#     bugprone-lambda-function-name,
#     bugprone-macro-parentheses,
#     bugprone-macro-repeated-side-effects,
#     bugprone-misplaced-operator-in-strlen-in-alloc,
#     bugprone-misplaced-pointer-arithmetic-in-alloc,
#     bugprone-misplaced-widening-cast,
#     bugprone-move-forwarding-reference,
#     bugprone-multiple-statement-macro,
#     bugprone-no-escape,
#     bugprone-not-null-terminated-result,
#     bugprone-parent-virtual-call,
#     bugprone-posix-return,
#     bugprone-redundant-branch-condition,
#     bugprone-reserved-identifier,
#     bugprone-signal-handler,
#     bugprone-signed-char-misuse,
#     bugprone-sizeof-container,
#     bugprone-sizeof-expression,
#     bugprone-spuriously-wake-up-functions,
#     bugprone-string-constructor,
#     bugprone-string-integer-assignment,
#     bugprone-string-literal-with-embedded-nul,
#     bugprone-stringview-nullptr,
#     bugprone-suspicious-enum-usage,
#     bugprone-suspicious-include,
#     bugprone-suspicious-memory-comparison,
#     bugprone-suspicious-memset-usage,
#     bugprone-suspicious-missing-comma,
#     bugprone-suspicious-semicolon,
#     bugprone-suspicious-string-compare,
#     bugprone-swapped-arguments,
#     bugprone-terminating-continue,
#     bugprone-throw-keyword-missing,
#     bugprone-too-small-loop-variable,
#     bugprone-undefined-memory-manipulation,
#     bugprone-undelegated-constructor,
#     bugprone-unhandled-exception-at-new,
#     bugprone-unhandled-self-assignment,
#     bugprone-unused-raii,
#     bugprone-unused-return-value,
#     bugprone-use-after-move,
#     bugprone-virtual-near-miss,
#     cert-dcl21-cpp,
#     cert-dcl50-cpp,
#     cert-dcl58-cpp,
#     cert-env33-c,
#     cert-err34-c,
#     cert-err52-cpp,
#     cert-err58-cpp,
#     cert-err60-cpp,
#     cert-exp42-c,
#     cert-flp30-c,
#     cert-flp37-c,
#     cert-mem57-cpp,
#     cert-msc50-cpp,
#     cert-msc51-cpp,
#     cert-oop57-cpp,
#     cert-oop58-cpp,
#     clang-analyzer-core.DynamicTypePropagation,
#     clang-analyzer-core.uninitialized.CapturedBlockVariable,
#     clang-analyzer-cplusplus.InnerPointer,
#     clang-analyzer-nullability.NullableReturnedFromNonnull,
#     clang-analyzer-optin.osx.OSObjectCStyleCast,
#     clang-analyzer-optin.performance.GCDAntipattern,
#     clang-analyzer-optin.performance.Padding,
#     clang-analyzer-optin.portability.UnixAPI,
#     clang-analyzer-osx.MIG,
#     clang-analyzer-osx.NumberObjectConversion,
#     clang-analyzer-osx.OSObjectRetainCount,
#     clang-analyzer-osx.ObjCProperty,
#     clang-analyzer-osx.cocoa.AutoreleaseWrite,
#     clang-analyzer-osx.cocoa.Loops,
#     clang-analyzer-osx.cocoa.MissingSuperCall,
#     clang-analyzer-osx.cocoa.NonNilReturnValue,
#     clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak,
#     clang-analyzer-valist.CopyToSelf,
#     clang-analyzer-valist.Uninitialized,
#     clang-analyzer-valist.Unterminated,
#     concurrency-mt-unsafe,
#     concurrency-thread-canceltype-asynchronous,
#     cppcoreguidelines-avoid-goto,
#     cppcoreguidelines-init-variables,
#     cppcoreguidelines-interfaces-global-init,
#     cppcoreguidelines-narrowing-conversions,
#     cppcoreguidelines-no-malloc,
#     cppcoreguidelines-pro-type-const-cast,
#     cppcoreguidelines-pro-type-cstyle-cast,
#     cppcoreguidelines-pro-type-member-init,
#     cppcoreguidelines-pro-type-static-cast-downcast,
#     cppcoreguidelines-slicing,
#     darwin-avoid-spinlock,
#     darwin-dispatch-once-nonstatic,
#     fuchsia-multiple-inheritance,
#     fuchsia-trailing-return,
#     fuchsia-virtual-inheritance,
#     google-build-explicit-make-pair,
#     google-build-namespaces,
#     google-build-using-namespace,
#     google-default-arguments,
#     google-explicit-constructor,
#     google-global-names-in-headers,
#     google-objc-avoid-nsobject-new,
#     google-objc-avoid-throwing-exception,
#     google-objc-function-naming,
#     google-objc-global-variable-declaration,
#     google-readability-avoid-underscore-in-googletest-name,
#     google-runtime-int,
#     google-runtime-operator,
#     google-upgrade-googletest-case,
#     hicpp-avoid-goto,
#     hicpp-exception-baseclass,
#     hicpp-multiway-paths-covered,
#     hicpp-no-assembler,
#     misc-definitions-in-headers,
#     misc-misleading-identifier,
#     misc-misplaced-const,
#     misc-new-delete-overloads,
#     misc-no-recursion,
#     misc-non-copyable-objects,
#     misc-non-private-member-variables-in-classes,
#     misc-redundant-expression,
#     misc-static-assert,
#     misc-throw-by-value-catch-by-reference,
#     misc-unconventional-assign-operator,
#     misc-uniqueptr-reset-release,
#     misc-unused-alias-decls,
#     misc-unused-using-decls,
#     modernize-avoid-bind,
#     modernize-avoid-c-arrays,
#     modernize-concat-nested-namespaces,
#     modernize-deprecated-headers,
#     modernize-deprecated-ios-base-aliases,
#     modernize-loop-convert,
#     modernize-make-shared,
#     modernize-make-unique,
#     modernize-pass-by-value,
#     modernize-raw-string-literal,
#     modernize-redundant-void-arg,
#     modernize-replace-auto-ptr,
#     modernize-replace-disallow-copy-and-assign-macro,
#     modernize-replace-random-shuffle,
#     modernize-return-braced-init-list,
#     modernize-shrink-to-fit,
#     modernize-unary-static-assert,
#     modernize-use-auto,
#     modernize-use-bool-literals,
#     modernize-use-default-member-init,
#     modernize-use-emplace,
#     modernize-use-equals-default,
#     modernize-use-equals-delete,
#     modernize-use-noexcept,
#     modernize-use-nullptr,
#     modernize-use-override,
#     modernize-use-transparent-functors,
#     modernize-use-uncaught-exceptions,
#     modernize-use-using,
#     mpi-buffer-deref,
#     mpi-type-mismatch,
#     objc-avoid-nserror-init,
#     objc-assert-equals,
#     objc-dealloc-in-category,
#     objc-forbidden-subclassing,
#     objc-missing-hash,
#     objc-nsinvocation-argument-lifetime,
#     objc-property-declaration,
#     objc-super-self,
#     openmp-exception-escape,
#     openmp-use-default-none,
#     performance-faster-string-find,
#     performance-for-range-copy,
#     performance-implicit-conversion-in-loop,
#     performance-inefficient-algorithm,
#     performance-inefficient-string-concatenation,
#     performance-inefficient-vector-operation,
#     performance-move-const-arg,
#     performance-move-constructor-init,
#     performance-no-automatic-move,
#     performance-no-int-to-ptr,
#     performance-noexcept-move-constructor,
#     performance-trivially-destructible,
#     performance-type-promotion-in-math-fn,
#     performance-unnecessary-copy-initialization,
#     performance-unnecessary-value-param,
#     portability-restrict-system-includes,
#     portability-simd-intrinsics,
#     readability-const-return-type,
#     readability-container-data-pointer,
#     readability-container-size-empty,
#     readability-convert-member-functions-to-static,
#     readability-delete-null-pointer,
#     readability-else-after-return,
#     readability-function-cognitive-complexity,
#     readability-function-size,
#     readability-identifier-naming,
#     readability-inconsistent-declaration-parameter-name,
#     readability-isolate-declaration,
#     readability-misleading-indentation,
#     readability-misplaced-array-index,
#     readability-non-const-parameter,
#     readability-redundant-control-flow,
#     readability-redundant-declaration,
#     readability-redundant-function-ptr-dereference,
#     readability-redundant-preprocessor,
#     readability-redundant-smartptr-get,
#     readability-redundant-string-cstr,
#     readability-redundant-string-init,
#     readability-simplify-boolean-expr,
#     readability-simplify-subscript-expr,
#     readability-static-accessed-through-instance,
#     readability-static-definition-in-anonymous-namespace,
#     readability-string-compare,
#     readability-suspicious-call-argument,
#     readability-uniqueptr-delete-release,
#     readability-use-anyofallof,
#     zircon-temporary-objects

WarningsAsErrors: ''
HeaderFilterRegex: '.*\.(h)$'
AnalyzeTemporaryDtors: false
FormatStyle:     'file'
UseColor:        true
CheckOptions:
- key:           'cppcoreguidelines-narrowing-conversions.IgnoreConversionFromTypes'
  value:         'size_t;std::vector::size_type'
- key:           'cppcoreguidelines-narrowing-conversions.WarnOnIntegerToFloatingPointNarrowingConversion'
  value:         'false'
- key:           'misc-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic'
  value:         'true'
- key:           'misc-non-private-member-variables-in-classes.IgnorePublicMemberVariables'
  value:         'false'
- key:           'readability-function-cognitive-complexity.DescribeBasicIncrements'
  value:         'false'
- key:           'readability-function-cognitive-complexity.Threshold'
  value:         '32'
- key:           'readability-function-cognitive-complexity.IgnoreMacros'
  value:         'true'

